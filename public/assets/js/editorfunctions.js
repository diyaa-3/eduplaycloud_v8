// parsing and then rendering Preview and HTML
function compile(exerciseSetInput, previewFrame, parserOutput) {
    indexes={};
    HTMLOutput.innerText =''
    previewFrame.innerHTML=''

    //use the exerciseSet parser defined in parser-exerciseSet.js - generated by peg grammar
    var parsedexerciseSet = parserexerciseSet.parse(exerciseSetInput)
    // print to Parsed Tab
    parserOutput.innerText = JSON.stringify(parsedexerciseSet, null, 4)

    // loop parsed questions and render Preview & HTML
    parsedexerciseSet.forEach(function (parsedQuestion) {
            renderParsedQuestiontoHTML(parsedQuestion, previewFrame, parserOutput)
        }
    );

    //third party renderers initiation
    mermaid.init();
    clock_init();
    myChart_init();

    abc_init();
    chess_init();
    //mathgraph_init();
}

//render one parsed question (and answers) in the HTML & Preview Tabs - called by compile for every question
function renderParsedQuestiontoHTML(parsedQuestion, previewFrame, parserOutput) {
    var parsedContent;
    var output=''; //used temporarly to build the renderedQuestion
    var renderedQuestion = '';

    //render question
    var res;
    res=evaluateParameters (parsedQuestion)   // function is available in parameterLanguage.js
    output+=res.output;
    parsedQuestion=res.parsedQuestion;

    // render question content
    parsedContent = parserContent.parse(parsedQuestion.content);
    // console.log( parsedContent);
    output += '<div class="Question">'
    output += renderContent(parsedContent)
    output+='</div>'

    // render Answers
    parsedQuestion.Ans.forEach(function (Answer) {
        parsedContent = parserContent.parse(Answer.content);
        // console.log( parsedContent);

        output += '<div class="Answer">'
        output += renderContent(parsedContent)
        output+='</div>'
    });

    // output = _htmlescape(output);
    // need to sanitize html output
    // renderedQuestion = '<pre>' + output + '<' + '/pre>'  //using <pre> in order to allow \n in the output string

    renderedQuestion=output;
    HTMLOutput.innerText += renderedQuestion   // print to HTML Tab
    previewFrame.innerHTML += renderedQuestion  // print to preview Tab
}

// loop to render all Elements of the question and its answers called by renderParsedQuestiontoHTML
function renderContent(mContent) {
    var output='';

    mContent.forEach(function (element) {
        output += renderElementContent(element)}
    );
    return output;
}

// render one Element based on the corresponding plugin - called by RenderContent
function renderElementContent(element) {
    var renderedElement = '';
    var plugIn = arraySearch((element.type), plugIns);
    // catch if plugin exist and deal with printing error
    if (!(element.type in indexes) ) {indexes[element.type]=0;}
    if (plugIn) {
        //  element.content = _htmlescape(element.content);
        renderedElement += plugIn.render(element.content,indexes[element.type]);
        indexes[element.type]++;
    } else {
        renderedElement += '<pre> Error Plugin of ' + element.type + ' Not Found. Check your syntax </pre>'
    }
    return renderedElement;
}